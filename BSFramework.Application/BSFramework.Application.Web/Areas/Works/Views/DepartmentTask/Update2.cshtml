@model BSFramework.Entity.WorkMeeting.DepartmentTaskEntity
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_FlowForm.cshtml";
}
<style>

    .form-control[readonly] {
        background-color: #eee;
    }
</style>
<script src="~/Content/scripts/business/common.js"></script>
<script src="~/Content/scripts/jquery/jquery.serializeJSON.min.js"></script>
<script src="~/Content/scripts/jquery/jquery.url.js"></script>
@Html.Partial("UserSelect")
@Html.Partial("DepartmentSelect")
<script>
    var id = '@ViewBag.id', section;
    var userid = '@ViewBag.userid';
    jQuery(function () {
        var task;
        if (top.document.getElementById("Edit"))
            task = top.document.getElementById("Edit").contentWindow.getTask(id);
        else {
            task = $.currentIframe().getTask(id);
        }
        jQuery('#Content').val(task.Content);
        jQuery('#StartDate').val(task.StartDate);
        jQuery('#EndDate').val(task.EndDate);
        jQuery('#DutyDepartmentId').val(task.DutyDepartmentId);
        jQuery('#DutyDepartment').val(task.DutyDepartment);
        jQuery('#DutyUserId').val(task.DutyUserId);
        jQuery('#DutyUser').val(task.DutyUser);
        jQuery('#Remark').val(task.Remark);
        jQuery('#UpdateRecords').val(task.UpdateRecords);
        jQuery('#CreateUser').val(task.CreateUser);
        jQuery('#CreateTime').val(task.CreateTime);
        if (task.Status == '已完成') jQuery('#finish').attr('checked', true);

        if (jQuery('#CreateUserId').val() == userid) { }
        else if (jQuery('#DutyUserId').val() == userid) {
            jQuery('#Content').attr('readonly', true);
            jQuery('#StartDate').attr('readonly', true).removeAttr('onfocus');
            jQuery('#EndDate').attr('readonly', true).removeAttr('onfocus');
            jQuery('#DutyDepartment').attr('readonly', true).removeAttr('onclick');
            jQuery('#DutyUser').attr('readonly', true).removeAttr('onclick');
            jQuery('#Remark').attr('readonly', true);
        } else if (jQuery('#TodoUserId').val() == userid) {
            jQuery('#Content').attr('readonly', true);
            jQuery('#StartDate').attr('readonly', true).removeAttr('onfocus');
            jQuery('#EndDate').attr('readonly', true).removeAttr('onfocus');
            jQuery('#DutyDepartment').attr('readonly', true).removeAttr('onclick');
            jQuery('#DutyUser').attr('readonly', true).removeAttr('onclick');
            jQuery('#TodoUser').attr('readonly', true).removeAttr('onclick');
            jQuery('#Remark').attr('readonly', true);
        }

        jQuery('#finish').change(function () {
            if (jQuery(this).prop('checked'))
                jQuery('#Status').val('已完成');
            else
                jQuery('#Status').val('未开始');
        });

    });

    function f_select() {
        selectUser(jQuery('#DutyDepartmentId').val(), 'single', function (data) {
            jQuery('#DutyUserId').val(data.UserId);
            jQuery('#DutyUser').val(data.RealName);
        });
    }

    function selectdept() {
        selectDepartment('single', '', function (node) {
            if (node) {
                jQuery('#DutyDepartmentId').val(node.value);
                jQuery('#DutyDepartment').val(node.text);
            }

        });
    }

    function AcceptClick() {
        var formdata = jQuery('form').serializeJSON();
        if (!formdata.Content) {
            dialogMsg('请输入工作任务！', 0);
            return;
        }
        if (!formdata.StartDate) {
            dialogMsg('请选择计划时间！', 0);
            return;
        }
        if (!formdata.EndDate) {
            dialogMsg('请选择计划时间！', 0);
            return;
        }
        if (!formdata.DutyDepartment) {
            dialogMsg('请选择责任部门！', 0);
            return;
        }
        if (!formdata.DutyUser) {
            dialogMsg('请选择责任人！', 0);
            return;
        }
        formdata.TaskId = id;
        if (section == 'new') formdata.IsNew = true;
        if (top.document.getElementById("Edit")) {
            top.document.getElementById("Edit").contentWindow.newtaskcallback(formdata);
            dialogClose();
        }
        else {
            Loading(true, '正在处理数据...');
            jQuery.ajax({
                url: '/..@Url.Action("Edit")/' + '@ViewBag.id',
                contentType: 'application/json',
                type: 'POST',
                data: JSON.stringify(formdata),
                success: function (data) {
                    if (data.type == "3") {
                        dialogAlert(data.message, -1);
                    } else {
                        Loading(false);
                        dialogMsg(data.message, 1);
                        $.currentIframe().fn$refresh();
                        dialogClose();
                    }
                },
                complete: function () {
                    Loading(false);
                }
            });
        }
    }

    function startChange() {
        var now = new Date();
        var date = new Date(now.getFullYear(), now.getMonth(), 1);
        var val = new Date(jQuery('#StartDate').val());
        if (val < date) {
            jQuery('#StartDate').val('');
            dialogMsg('开始时间不能早于当月1号！', 0);
        }
    }

    function endChange() {
        var start = new Date(jQuery('#StartDate').val());
        var end = new Date(jQuery('#EndDate').val());
        if (!(end >= start)) {
            jQuery('#EndDate').val('');
            dialogMsg('结束时间必须大于或等于开始时间！', 0);
        }
    }

</script>
<div class="container-fluid">
    <div class="panel-body form-horizontal">
        <div class="form-group">
            <label class="col-xs-2 control-label">工作任务<span style="color:red;">*</span></label>
            <div class="col-xs-8">
                @Html.TextAreaFor(x => x.Content, new { @class = "form-control", placeholder = "请输入", rows = "3", maxlength = 500 })
            </div>
            <div class="col-xs-2 checkbox">
                <label>
                    @Html.HiddenFor(x => x.Status)
                    <input type="checkbox" id="finish" name="finish" value="完成"> 完成
                </label>
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">计划时间<span style="color:red;">*</span></label>
            <div class="col-xs-10">
                @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control", onfocus = "WdatePicker({onpicked:startChange});this.blur()", style = "width:200px;display:inline" })
                <span style="line-height:26px;">~</span>
                @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control", onfocus = "WdatePicker({onpicked:endChange});this.blur()", style = "width:200px;display:inline" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">责任部门<span style="color:red;">*</span></label>
            <div class="col-xs-4">
                @Html.HiddenFor(x => x.DutyDepartmentId)
                @Html.TextBoxFor(x => x.DutyDepartment, new { @class = "form-control", onfocus = "this.blur()", onclick = "selectdept();" })
            </div>
            <label class="col-xs-2 control-label">责任人<span style="color:red;">*</span></label>
            <div class="col-xs-4">
                @Html.HiddenFor(x => x.DutyUserId)
                @Html.TextBoxFor(x => x.DutyUser, new { @class = "form-control", onfocus = "this.blur()", onclick = "f_select();" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">任务说明</label>
            <div class="col-xs-10">
                @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", placeholder = "请输入", rows = "3", maxlength = 500 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">变更记录</label>
            <div class="col-xs-10">
                @Html.TextAreaFor(x => x.UpdateRecords, new { @class = "form-control", rows = "3", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">创建人</label>
            <div class="col-xs-4">
                @Html.TextBoxFor(x => x.CreateUser, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <label class="col-xs-2 control-label">创建时间</label>
            <div class="col-xs-4">
                @Html.TextBoxFor(x => x.CreateTime, new { @class = "form-control", Value = string.Empty, @readonly = "readonly" })
            </div>
        </div>
    </div>
</div>
